version: '3.8'

services:
  db:
    image: postgres:15
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    container_name: postgres_db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=postgres_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - db_data:/var/lib/postgresql/data

  backend:
    build:
      context: ./backend/simple_weight_tracker
      dockerfile: Dockerfile
    container_name: weight_tracker_backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend/simple_weight_tracker:/app
    depends_on:
      db:
        condition: service_healthy # This helps to prevent to fast startup. It is waiting until postgres boots up in the docker.
    environment:
      DB_NAME: postgres_db
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: db
      DB_PORT: '5432'

  test:
    build:
      context: ./backend/simple_weight_tracker
      dockerfile: Dockerfile
    container_name: weight_tests
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_NAME: postgres_db
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: db
      DB_PORT: '5432'
    command: python manage.py test

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: weight_tracker_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/usr/src/app  
    depends_on:
      - backend
    environment:
      REACT_APP_API_URL: "http://localhost:8000"

volumes:
  db_data:
